/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/testimonials": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.testimonials.id"];
          created_at?: parameters["rowFilter.testimonials.created_at"];
          content?: parameters["rowFilter.testimonials.content"];
          show?: parameters["rowFilter.testimonials.show"];
          client?: parameters["rowFilter.testimonials.client"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["testimonials"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** testimonials */
          testimonials?: definitions["testimonials"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.testimonials.id"];
          created_at?: parameters["rowFilter.testimonials.created_at"];
          content?: parameters["rowFilter.testimonials.content"];
          show?: parameters["rowFilter.testimonials.show"];
          client?: parameters["rowFilter.testimonials.client"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.testimonials.id"];
          created_at?: parameters["rowFilter.testimonials.created_at"];
          content?: parameters["rowFilter.testimonials.content"];
          show?: parameters["rowFilter.testimonials.show"];
          client?: parameters["rowFilter.testimonials.client"];
        };
        body: {
          /** testimonials */
          testimonials?: definitions["testimonials"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/basket_status": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.basket_status.id"];
          created_at?: parameters["rowFilter.basket_status.created_at"];
          basket_status?: parameters["rowFilter.basket_status.basket_status"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["basket_status"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** basket_status */
          basket_status?: definitions["basket_status"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.basket_status.id"];
          created_at?: parameters["rowFilter.basket_status.created_at"];
          basket_status?: parameters["rowFilter.basket_status.basket_status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.basket_status.id"];
          created_at?: parameters["rowFilter.basket_status.created_at"];
          basket_status?: parameters["rowFilter.basket_status.basket_status"];
        };
        body: {
          /** basket_status */
          basket_status?: definitions["basket_status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/campaign_has_services": {
    get: {
      parameters: {
        query: {
          campaign_id?: parameters["rowFilter.campaign_has_services.campaign_id"];
          created_at?: parameters["rowFilter.campaign_has_services.created_at"];
          service_id?: parameters["rowFilter.campaign_has_services.service_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["campaign_has_services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** campaign_has_services */
          campaign_has_services?: definitions["campaign_has_services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          campaign_id?: parameters["rowFilter.campaign_has_services.campaign_id"];
          created_at?: parameters["rowFilter.campaign_has_services.created_at"];
          service_id?: parameters["rowFilter.campaign_has_services.service_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          campaign_id?: parameters["rowFilter.campaign_has_services.campaign_id"];
          created_at?: parameters["rowFilter.campaign_has_services.created_at"];
          service_id?: parameters["rowFilter.campaign_has_services.service_id"];
        };
        body: {
          /** campaign_has_services */
          campaign_has_services?: definitions["campaign_has_services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/order_status": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.order_status.id"];
          created_at?: parameters["rowFilter.order_status.created_at"];
          order_status?: parameters["rowFilter.order_status.order_status"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["order_status"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** order_status */
          order_status?: definitions["order_status"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.order_status.id"];
          created_at?: parameters["rowFilter.order_status.created_at"];
          order_status?: parameters["rowFilter.order_status.order_status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.order_status.id"];
          created_at?: parameters["rowFilter.order_status.created_at"];
          order_status?: parameters["rowFilter.order_status.order_status"];
        };
        body: {
          /** order_status */
          order_status?: definitions["order_status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/pages": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          created_at?: parameters["rowFilter.pages.created_at"];
          name?: parameters["rowFilter.pages.name"];
          title?: parameters["rowFilter.pages.title"];
          background?: parameters["rowFilter.pages.background"];
          sub_header?: parameters["rowFilter.pages.sub_header"];
          support_text?: parameters["rowFilter.pages.support_text"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["pages"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** pages */
          pages?: definitions["pages"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          created_at?: parameters["rowFilter.pages.created_at"];
          name?: parameters["rowFilter.pages.name"];
          title?: parameters["rowFilter.pages.title"];
          background?: parameters["rowFilter.pages.background"];
          sub_header?: parameters["rowFilter.pages.sub_header"];
          support_text?: parameters["rowFilter.pages.support_text"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.pages.id"];
          created_at?: parameters["rowFilter.pages.created_at"];
          name?: parameters["rowFilter.pages.name"];
          title?: parameters["rowFilter.pages.title"];
          background?: parameters["rowFilter.pages.background"];
          sub_header?: parameters["rowFilter.pages.sub_header"];
          support_text?: parameters["rowFilter.pages.support_text"];
        };
        body: {
          /** pages */
          pages?: definitions["pages"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/imagegallery": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imagegallery.id"];
          created_at?: parameters["rowFilter.imagegallery.created_at"];
          url?: parameters["rowFilter.imagegallery.url"];
          name?: parameters["rowFilter.imagegallery.name"];
          show_main?: parameters["rowFilter.imagegallery.show_main"];
          gallery?: parameters["rowFilter.imagegallery.gallery"];
          carousel?: parameters["rowFilter.imagegallery.carousel"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["imagegallery"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** imagegallery */
          imagegallery?: definitions["imagegallery"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imagegallery.id"];
          created_at?: parameters["rowFilter.imagegallery.created_at"];
          url?: parameters["rowFilter.imagegallery.url"];
          name?: parameters["rowFilter.imagegallery.name"];
          show_main?: parameters["rowFilter.imagegallery.show_main"];
          gallery?: parameters["rowFilter.imagegallery.gallery"];
          carousel?: parameters["rowFilter.imagegallery.carousel"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imagegallery.id"];
          created_at?: parameters["rowFilter.imagegallery.created_at"];
          url?: parameters["rowFilter.imagegallery.url"];
          name?: parameters["rowFilter.imagegallery.name"];
          show_main?: parameters["rowFilter.imagegallery.show_main"];
          gallery?: parameters["rowFilter.imagegallery.gallery"];
          carousel?: parameters["rowFilter.imagegallery.carousel"];
        };
        body: {
          /** imagegallery */
          imagegallery?: definitions["imagegallery"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/working_hours": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.working_hours.id"];
          day?: parameters["rowFilter.working_hours.day"];
          start_hour?: parameters["rowFilter.working_hours.start_hour"];
          end_hours?: parameters["rowFilter.working_hours.end_hours"];
          open?: parameters["rowFilter.working_hours.open"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["working_hours"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** working_hours */
          working_hours?: definitions["working_hours"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.working_hours.id"];
          day?: parameters["rowFilter.working_hours.day"];
          start_hour?: parameters["rowFilter.working_hours.start_hour"];
          end_hours?: parameters["rowFilter.working_hours.end_hours"];
          open?: parameters["rowFilter.working_hours.open"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.working_hours.id"];
          day?: parameters["rowFilter.working_hours.day"];
          start_hour?: parameters["rowFilter.working_hours.start_hour"];
          end_hours?: parameters["rowFilter.working_hours.end_hours"];
          open?: parameters["rowFilter.working_hours.open"];
        };
        body: {
          /** working_hours */
          working_hours?: definitions["working_hours"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/comments": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          created_at?: parameters["rowFilter.comments.created_at"];
          content?: parameters["rowFilter.comments.content"];
          comment_id?: parameters["rowFilter.comments.comment_id"];
          client_id?: parameters["rowFilter.comments.client_id"];
          service_id?: parameters["rowFilter.comments.service_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["comments"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** comments */
          comments?: definitions["comments"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          created_at?: parameters["rowFilter.comments.created_at"];
          content?: parameters["rowFilter.comments.content"];
          comment_id?: parameters["rowFilter.comments.comment_id"];
          client_id?: parameters["rowFilter.comments.client_id"];
          service_id?: parameters["rowFilter.comments.service_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.comments.id"];
          created_at?: parameters["rowFilter.comments.created_at"];
          content?: parameters["rowFilter.comments.content"];
          comment_id?: parameters["rowFilter.comments.comment_id"];
          client_id?: parameters["rowFilter.comments.client_id"];
          service_id?: parameters["rowFilter.comments.service_id"];
        };
        body: {
          /** comments */
          comments?: definitions["comments"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/message": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.message.id"];
          created_at?: parameters["rowFilter.message.created_at"];
          email?: parameters["rowFilter.message.email"];
          phone?: parameters["rowFilter.message.phone"];
          content?: parameters["rowFilter.message.content"];
          name?: parameters["rowFilter.message.name"];
          replied?: parameters["rowFilter.message.replied"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["message"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** message */
          message?: definitions["message"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.message.id"];
          created_at?: parameters["rowFilter.message.created_at"];
          email?: parameters["rowFilter.message.email"];
          phone?: parameters["rowFilter.message.phone"];
          content?: parameters["rowFilter.message.content"];
          name?: parameters["rowFilter.message.name"];
          replied?: parameters["rowFilter.message.replied"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.message.id"];
          created_at?: parameters["rowFilter.message.created_at"];
          email?: parameters["rowFilter.message.email"];
          phone?: parameters["rowFilter.message.phone"];
          content?: parameters["rowFilter.message.content"];
          name?: parameters["rowFilter.message.name"];
          replied?: parameters["rowFilter.message.replied"];
        };
        body: {
          /** message */
          message?: definitions["message"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/voucher": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.voucher.id"];
          created_at?: parameters["rowFilter.voucher.created_at"];
          voucher_name?: parameters["rowFilter.voucher.voucher_name"];
          value?: parameters["rowFilter.voucher.value"];
          start_date?: parameters["rowFilter.voucher.start_date"];
          end_date?: parameters["rowFilter.voucher.end_date"];
          client_id?: parameters["rowFilter.voucher.client_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["voucher"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** voucher */
          voucher?: definitions["voucher"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.voucher.id"];
          created_at?: parameters["rowFilter.voucher.created_at"];
          voucher_name?: parameters["rowFilter.voucher.voucher_name"];
          value?: parameters["rowFilter.voucher.value"];
          start_date?: parameters["rowFilter.voucher.start_date"];
          end_date?: parameters["rowFilter.voucher.end_date"];
          client_id?: parameters["rowFilter.voucher.client_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.voucher.id"];
          created_at?: parameters["rowFilter.voucher.created_at"];
          voucher_name?: parameters["rowFilter.voucher.voucher_name"];
          value?: parameters["rowFilter.voucher.value"];
          start_date?: parameters["rowFilter.voucher.start_date"];
          end_date?: parameters["rowFilter.voucher.end_date"];
          client_id?: parameters["rowFilter.voucher.client_id"];
        };
        body: {
          /** voucher */
          voucher?: definitions["voucher"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/business_info": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.business_info.id"];
          created_at?: parameters["rowFilter.business_info.created_at"];
          name?: parameters["rowFilter.business_info.name"];
          email?: parameters["rowFilter.business_info.email"];
          phone?: parameters["rowFilter.business_info.phone"];
          show?: parameters["rowFilter.business_info.show"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["business_info"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** business_info */
          business_info?: definitions["business_info"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.business_info.id"];
          created_at?: parameters["rowFilter.business_info.created_at"];
          name?: parameters["rowFilter.business_info.name"];
          email?: parameters["rowFilter.business_info.email"];
          phone?: parameters["rowFilter.business_info.phone"];
          show?: parameters["rowFilter.business_info.show"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.business_info.id"];
          created_at?: parameters["rowFilter.business_info.created_at"];
          name?: parameters["rowFilter.business_info.name"];
          email?: parameters["rowFilter.business_info.email"];
          phone?: parameters["rowFilter.business_info.phone"];
          show?: parameters["rowFilter.business_info.show"];
        };
        body: {
          /** business_info */
          business_info?: definitions["business_info"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/imagecarousel": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imagecarousel.id"];
          created_at?: parameters["rowFilter.imagecarousel.created_at"];
          url?: parameters["rowFilter.imagecarousel.url"];
          name?: parameters["rowFilter.imagecarousel.name"];
          show_main?: parameters["rowFilter.imagecarousel.show_main"];
          gallery?: parameters["rowFilter.imagecarousel.gallery"];
          carousel?: parameters["rowFilter.imagecarousel.carousel"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["imagecarousel"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** imagecarousel */
          imagecarousel?: definitions["imagecarousel"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imagecarousel.id"];
          created_at?: parameters["rowFilter.imagecarousel.created_at"];
          url?: parameters["rowFilter.imagecarousel.url"];
          name?: parameters["rowFilter.imagecarousel.name"];
          show_main?: parameters["rowFilter.imagecarousel.show_main"];
          gallery?: parameters["rowFilter.imagecarousel.gallery"];
          carousel?: parameters["rowFilter.imagecarousel.carousel"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.imagecarousel.id"];
          created_at?: parameters["rowFilter.imagecarousel.created_at"];
          url?: parameters["rowFilter.imagecarousel.url"];
          name?: parameters["rowFilter.imagecarousel.name"];
          show_main?: parameters["rowFilter.imagecarousel.show_main"];
          gallery?: parameters["rowFilter.imagecarousel.gallery"];
          carousel?: parameters["rowFilter.imagecarousel.carousel"];
        };
        body: {
          /** imagecarousel */
          imagecarousel?: definitions["imagecarousel"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/services": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          name?: parameters["rowFilter.services.name"];
          description?: parameters["rowFilter.services.description"];
          duration?: parameters["rowFilter.services.duration"];
          price?: parameters["rowFilter.services.price"];
          image?: parameters["rowFilter.services.image"];
          category?: parameters["rowFilter.services.category"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** services */
          services?: definitions["services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          name?: parameters["rowFilter.services.name"];
          description?: parameters["rowFilter.services.description"];
          duration?: parameters["rowFilter.services.duration"];
          price?: parameters["rowFilter.services.price"];
          image?: parameters["rowFilter.services.image"];
          category?: parameters["rowFilter.services.category"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.services.id"];
          created_at?: parameters["rowFilter.services.created_at"];
          name?: parameters["rowFilter.services.name"];
          description?: parameters["rowFilter.services.description"];
          duration?: parameters["rowFilter.services.duration"];
          price?: parameters["rowFilter.services.price"];
          image?: parameters["rowFilter.services.image"];
          category?: parameters["rowFilter.services.category"];
        };
        body: {
          /** services */
          services?: definitions["services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/ratings": {
    get: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.ratings.service_id"];
          created_at?: parameters["rowFilter.ratings.created_at"];
          value?: parameters["rowFilter.ratings.value"];
          client_id?: parameters["rowFilter.ratings.client_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["ratings"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** ratings */
          ratings?: definitions["ratings"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.ratings.service_id"];
          created_at?: parameters["rowFilter.ratings.created_at"];
          value?: parameters["rowFilter.ratings.value"];
          client_id?: parameters["rowFilter.ratings.client_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.ratings.service_id"];
          created_at?: parameters["rowFilter.ratings.created_at"];
          value?: parameters["rowFilter.ratings.value"];
          client_id?: parameters["rowFilter.ratings.client_id"];
        };
        body: {
          /** ratings */
          ratings?: definitions["ratings"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/category": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.category.id"];
          created_at?: parameters["rowFilter.category.created_at"];
          category_name?: parameters["rowFilter.category.category_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["category"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** category */
          category?: definitions["category"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.category.id"];
          created_at?: parameters["rowFilter.category.created_at"];
          category_name?: parameters["rowFilter.category.category_name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.category.id"];
          created_at?: parameters["rowFilter.category.created_at"];
          category_name?: parameters["rowFilter.category.category_name"];
        };
        body: {
          /** category */
          category?: definitions["category"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/orders": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          client_id?: parameters["rowFilter.orders.client_id"];
          basket?: parameters["rowFilter.orders.basket"];
          order_status?: parameters["rowFilter.orders.order_status"];
          voucher?: parameters["rowFilter.orders.voucher"];
          campaign?: parameters["rowFilter.orders.campaign"];
          value?: parameters["rowFilter.orders.value"];
          start?: parameters["rowFilter.orders.start"];
          end?: parameters["rowFilter.orders.end"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["orders"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          client_id?: parameters["rowFilter.orders.client_id"];
          basket?: parameters["rowFilter.orders.basket"];
          order_status?: parameters["rowFilter.orders.order_status"];
          voucher?: parameters["rowFilter.orders.voucher"];
          campaign?: parameters["rowFilter.orders.campaign"];
          value?: parameters["rowFilter.orders.value"];
          start?: parameters["rowFilter.orders.start"];
          end?: parameters["rowFilter.orders.end"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.orders.id"];
          created_at?: parameters["rowFilter.orders.created_at"];
          client_id?: parameters["rowFilter.orders.client_id"];
          basket?: parameters["rowFilter.orders.basket"];
          order_status?: parameters["rowFilter.orders.order_status"];
          voucher?: parameters["rowFilter.orders.voucher"];
          campaign?: parameters["rowFilter.orders.campaign"];
          value?: parameters["rowFilter.orders.value"];
          start?: parameters["rowFilter.orders.start"];
          end?: parameters["rowFilter.orders.end"];
        };
        body: {
          /** orders */
          orders?: definitions["orders"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/gallery": {
    get: {
      parameters: {
        query: {
          url?: parameters["rowFilter.gallery.url"];
          name?: parameters["rowFilter.gallery.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["gallery"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** gallery */
          gallery?: definitions["gallery"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          url?: parameters["rowFilter.gallery.url"];
          name?: parameters["rowFilter.gallery.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          url?: parameters["rowFilter.gallery.url"];
          name?: parameters["rowFilter.gallery.name"];
        };
        body: {
          /** gallery */
          gallery?: definitions["gallery"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/image_has_likes": {
    get: {
      parameters: {
        query: {
          client_id?: parameters["rowFilter.image_has_likes.client_id"];
          created_at?: parameters["rowFilter.image_has_likes.created_at"];
          image_id?: parameters["rowFilter.image_has_likes.image_id"];
          liked?: parameters["rowFilter.image_has_likes.liked"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["image_has_likes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** image_has_likes */
          image_has_likes?: definitions["image_has_likes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          client_id?: parameters["rowFilter.image_has_likes.client_id"];
          created_at?: parameters["rowFilter.image_has_likes.created_at"];
          image_id?: parameters["rowFilter.image_has_likes.image_id"];
          liked?: parameters["rowFilter.image_has_likes.liked"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          client_id?: parameters["rowFilter.image_has_likes.client_id"];
          created_at?: parameters["rowFilter.image_has_likes.created_at"];
          image_id?: parameters["rowFilter.image_has_likes.image_id"];
          liked?: parameters["rowFilter.image_has_likes.liked"];
        };
        body: {
          /** image_has_likes */
          image_has_likes?: definitions["image_has_likes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/images": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.images.id"];
          created_at?: parameters["rowFilter.images.created_at"];
          url?: parameters["rowFilter.images.url"];
          name?: parameters["rowFilter.images.name"];
          show_main?: parameters["rowFilter.images.show_main"];
          gallery?: parameters["rowFilter.images.gallery"];
          carousel?: parameters["rowFilter.images.carousel"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["images"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** images */
          images?: definitions["images"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.images.id"];
          created_at?: parameters["rowFilter.images.created_at"];
          url?: parameters["rowFilter.images.url"];
          name?: parameters["rowFilter.images.name"];
          show_main?: parameters["rowFilter.images.show_main"];
          gallery?: parameters["rowFilter.images.gallery"];
          carousel?: parameters["rowFilter.images.carousel"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.images.id"];
          created_at?: parameters["rowFilter.images.created_at"];
          url?: parameters["rowFilter.images.url"];
          name?: parameters["rowFilter.images.name"];
          show_main?: parameters["rowFilter.images.show_main"];
          gallery?: parameters["rowFilter.images.gallery"];
          carousel?: parameters["rowFilter.images.carousel"];
        };
        body: {
          /** images */
          images?: definitions["images"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/special_days": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.special_days.id"];
          date?: parameters["rowFilter.special_days.date"];
          start_hours?: parameters["rowFilter.special_days.start_hours"];
          end_hours?: parameters["rowFilter.special_days.end_hours"];
          open?: parameters["rowFilter.special_days.open"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["special_days"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** special_days */
          special_days?: definitions["special_days"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.special_days.id"];
          date?: parameters["rowFilter.special_days.date"];
          start_hours?: parameters["rowFilter.special_days.start_hours"];
          end_hours?: parameters["rowFilter.special_days.end_hours"];
          open?: parameters["rowFilter.special_days.open"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.special_days.id"];
          date?: parameters["rowFilter.special_days.date"];
          start_hours?: parameters["rowFilter.special_days.start_hours"];
          end_hours?: parameters["rowFilter.special_days.end_hours"];
          open?: parameters["rowFilter.special_days.open"];
        };
        body: {
          /** special_days */
          special_days?: definitions["special_days"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/service_has_images": {
    get: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.service_has_images.service_id"];
          created_at?: parameters["rowFilter.service_has_images.created_at"];
          image_id?: parameters["rowFilter.service_has_images.image_id"];
          index?: parameters["rowFilter.service_has_images.index"];
          show?: parameters["rowFilter.service_has_images.show"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["service_has_images"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** service_has_images */
          service_has_images?: definitions["service_has_images"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.service_has_images.service_id"];
          created_at?: parameters["rowFilter.service_has_images.created_at"];
          image_id?: parameters["rowFilter.service_has_images.image_id"];
          index?: parameters["rowFilter.service_has_images.index"];
          show?: parameters["rowFilter.service_has_images.show"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.service_has_images.service_id"];
          created_at?: parameters["rowFilter.service_has_images.created_at"];
          image_id?: parameters["rowFilter.service_has_images.image_id"];
          index?: parameters["rowFilter.service_has_images.index"];
          show?: parameters["rowFilter.service_has_images.show"];
        };
        body: {
          /** service_has_images */
          service_has_images?: definitions["service_has_images"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/basket": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.basket.id"];
          created_at?: parameters["rowFilter.basket.created_at"];
          basket_status?: parameters["rowFilter.basket.basket_status"];
          client_id?: parameters["rowFilter.basket.client_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["basket"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** basket */
          basket?: definitions["basket"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.basket.id"];
          created_at?: parameters["rowFilter.basket.created_at"];
          basket_status?: parameters["rowFilter.basket.basket_status"];
          client_id?: parameters["rowFilter.basket.client_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.basket.id"];
          created_at?: parameters["rowFilter.basket.created_at"];
          basket_status?: parameters["rowFilter.basket.basket_status"];
          client_id?: parameters["rowFilter.basket.client_id"];
        };
        body: {
          /** basket */
          basket?: definitions["basket"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user_status": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_status.id"];
          user_status?: parameters["rowFilter.user_status.user_status"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user_status"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user_status */
          user_status?: definitions["user_status"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_status.id"];
          user_status?: parameters["rowFilter.user_status.user_status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.user_status.id"];
          user_status?: parameters["rowFilter.user_status.user_status"];
        };
        body: {
          /** user_status */
          user_status?: definitions["user_status"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/articles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          created_at?: parameters["rowFilter.articles.created_at"];
          name?: parameters["rowFilter.articles.name"];
          image?: parameters["rowFilter.articles.image"];
          content?: parameters["rowFilter.articles.content"];
          release_date?: parameters["rowFilter.articles.release_date"];
          author?: parameters["rowFilter.articles.author"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["articles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** articles */
          articles?: definitions["articles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          created_at?: parameters["rowFilter.articles.created_at"];
          name?: parameters["rowFilter.articles.name"];
          image?: parameters["rowFilter.articles.image"];
          content?: parameters["rowFilter.articles.content"];
          release_date?: parameters["rowFilter.articles.release_date"];
          author?: parameters["rowFilter.articles.author"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.articles.id"];
          created_at?: parameters["rowFilter.articles.created_at"];
          name?: parameters["rowFilter.articles.name"];
          image?: parameters["rowFilter.articles.image"];
          content?: parameters["rowFilter.articles.content"];
          release_date?: parameters["rowFilter.articles.release_date"];
          author?: parameters["rowFilter.articles.author"];
        };
        body: {
          /** articles */
          articles?: definitions["articles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/campaigns": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.campaigns.id"];
          created_at?: parameters["rowFilter.campaigns.created_at"];
          start_date?: parameters["rowFilter.campaigns.start_date"];
          end_date?: parameters["rowFilter.campaigns.end_date"];
          value?: parameters["rowFilter.campaigns.value"];
          name?: parameters["rowFilter.campaigns.name"];
          description?: parameters["rowFilter.campaigns.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["campaigns"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** campaigns */
          campaigns?: definitions["campaigns"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.campaigns.id"];
          created_at?: parameters["rowFilter.campaigns.created_at"];
          start_date?: parameters["rowFilter.campaigns.start_date"];
          end_date?: parameters["rowFilter.campaigns.end_date"];
          value?: parameters["rowFilter.campaigns.value"];
          name?: parameters["rowFilter.campaigns.name"];
          description?: parameters["rowFilter.campaigns.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.campaigns.id"];
          created_at?: parameters["rowFilter.campaigns.created_at"];
          start_date?: parameters["rowFilter.campaigns.start_date"];
          end_date?: parameters["rowFilter.campaigns.end_date"];
          value?: parameters["rowFilter.campaigns.value"];
          name?: parameters["rowFilter.campaigns.name"];
          description?: parameters["rowFilter.campaigns.description"];
        };
        body: {
          /** campaigns */
          campaigns?: definitions["campaigns"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/page_has_articles": {
    get: {
      parameters: {
        query: {
          page_id?: parameters["rowFilter.page_has_articles.page_id"];
          index?: parameters["rowFilter.page_has_articles.index"];
          article_id?: parameters["rowFilter.page_has_articles.article_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["page_has_articles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** page_has_articles */
          page_has_articles?: definitions["page_has_articles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          page_id?: parameters["rowFilter.page_has_articles.page_id"];
          index?: parameters["rowFilter.page_has_articles.index"];
          article_id?: parameters["rowFilter.page_has_articles.article_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          page_id?: parameters["rowFilter.page_has_articles.page_id"];
          index?: parameters["rowFilter.page_has_articles.index"];
          article_id?: parameters["rowFilter.page_has_articles.article_id"];
        };
        body: {
          /** page_has_articles */
          page_has_articles?: definitions["page_has_articles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/service_has_compatible_services": {
    get: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.service_has_compatible_services.service_id"];
          compatible_services?: parameters["rowFilter.service_has_compatible_services.compatible_services"];
          created_at?: parameters["rowFilter.service_has_compatible_services.created_at"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["service_has_compatible_services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** service_has_compatible_services */
          service_has_compatible_services?: definitions["service_has_compatible_services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.service_has_compatible_services.service_id"];
          compatible_services?: parameters["rowFilter.service_has_compatible_services.compatible_services"];
          created_at?: parameters["rowFilter.service_has_compatible_services.created_at"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          service_id?: parameters["rowFilter.service_has_compatible_services.service_id"];
          compatible_services?: parameters["rowFilter.service_has_compatible_services.compatible_services"];
          created_at?: parameters["rowFilter.service_has_compatible_services.created_at"];
        };
        body: {
          /** service_has_compatible_services */
          service_has_compatible_services?: definitions["service_has_compatible_services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/roles": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.roles.id"];
          role?: parameters["rowFilter.roles.role"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["roles"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** roles */
          roles?: definitions["roles"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.roles.id"];
          role?: parameters["rowFilter.roles.role"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.roles.id"];
          role?: parameters["rowFilter.roles.role"];
        };
        body: {
          /** roles */
          roles?: definitions["roles"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/basket_has_services": {
    get: {
      parameters: {
        query: {
          basket_id?: parameters["rowFilter.basket_has_services.basket_id"];
          created_at?: parameters["rowFilter.basket_has_services.created_at"];
          service_id?: parameters["rowFilter.basket_has_services.service_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["basket_has_services"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** basket_has_services */
          basket_has_services?: definitions["basket_has_services"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          basket_id?: parameters["rowFilter.basket_has_services.basket_id"];
          created_at?: parameters["rowFilter.basket_has_services.created_at"];
          service_id?: parameters["rowFilter.basket_has_services.service_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          basket_id?: parameters["rowFilter.basket_has_services.basket_id"];
          created_at?: parameters["rowFilter.basket_has_services.created_at"];
          service_id?: parameters["rowFilter.basket_has_services.service_id"];
        };
        body: {
          /** basket_has_services */
          basket_has_services?: definitions["basket_has_services"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/clients": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.clients.id"];
          created_at?: parameters["rowFilter.clients.created_at"];
          name?: parameters["rowFilter.clients.name"];
          phone?: parameters["rowFilter.clients.phone"];
          email?: parameters["rowFilter.clients.email"];
          last_visit?: parameters["rowFilter.clients.last_visit"];
          role?: parameters["rowFilter.clients.role"];
          user_status?: parameters["rowFilter.clients.user_status"];
          referred_by?: parameters["rowFilter.clients.referred_by"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["clients"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** clients */
          clients?: definitions["clients"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.clients.id"];
          created_at?: parameters["rowFilter.clients.created_at"];
          name?: parameters["rowFilter.clients.name"];
          phone?: parameters["rowFilter.clients.phone"];
          email?: parameters["rowFilter.clients.email"];
          last_visit?: parameters["rowFilter.clients.last_visit"];
          role?: parameters["rowFilter.clients.role"];
          user_status?: parameters["rowFilter.clients.user_status"];
          referred_by?: parameters["rowFilter.clients.referred_by"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.clients.id"];
          created_at?: parameters["rowFilter.clients.created_at"];
          name?: parameters["rowFilter.clients.name"];
          phone?: parameters["rowFilter.clients.phone"];
          email?: parameters["rowFilter.clients.email"];
          last_visit?: parameters["rowFilter.clients.last_visit"];
          role?: parameters["rowFilter.clients.role"];
          user_status?: parameters["rowFilter.clients.user_status"];
          referred_by?: parameters["rowFilter.clients.referred_by"];
        };
        body: {
          /** clients */
          clients?: definitions["clients"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  testimonials: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    content: string;
    /** Format: boolean */
    show: boolean;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client: string;
  };
  basket_status: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    basket_status: string;
  };
  campaign_has_services: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `campaigns.id`.<fk table='campaigns' column='id'/>
     */
    campaign_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id: string;
  };
  order_status: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    order_status: string;
  };
  pages: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    title?: string;
    /** Format: character varying */
    background?: string;
    /** Format: text */
    sub_header?: string;
    /** Format: text */
    support_text?: string;
  };
  imagegallery: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: character varying */
    url?: string;
    /** Format: character varying */
    name?: string;
    /** Format: boolean */
    show_main?: boolean;
    /** Format: boolean */
    gallery?: boolean;
    /** Format: boolean */
    carousel?: boolean;
  };
  working_hours: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /** Format: character varying */
    day: string;
    /** Format: time with time zone */
    start_hour: string;
    /** Format: time with time zone */
    end_hours: string;
    /**
     * Format: boolean
     * @default true
     */
    open: boolean;
  };
  comments: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    content: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `comments.id`.<fk table='comments' column='id'/>
     */
    comment_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id?: string;
  };
  message: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    email: string;
    /** Format: character varying */
    phone?: string;
    /** Format: text */
    content: string;
    /** Format: character varying */
    name?: string;
    /**
     * Format: boolean
     * @default false
     */
    replied: boolean;
  };
  voucher: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    voucher_name?: string;
    /** Format: double precision */
    value: number;
    /** Format: timestamp with time zone */
    start_date: string;
    /** Format: timestamp with time zone */
    end_date: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id: string;
  };
  business_info: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    email?: string;
    /** Format: character varying */
    phone?: string;
    /**
     * Format: boolean
     * @default false
     */
    show?: boolean;
  };
  imagecarousel: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: character varying */
    url?: string;
    /** Format: character varying */
    name?: string;
    /** Format: boolean */
    show_main?: boolean;
    /** Format: boolean */
    gallery?: boolean;
    /** Format: boolean */
    carousel?: boolean;
  };
  services: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name: string;
    /** Format: text */
    description?: string;
    /** Format: bigint */
    duration?: number;
    /** Format: double precision */
    price?: number;
    /** Format: text */
    image?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `category.id`.<fk table='category' column='id'/>
     */
    category?: string;
  };
  ratings: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: integer */
    value?: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id: string;
  };
  category: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    category_name: string;
  };
  orders: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `basket.id`.<fk table='basket' column='id'/>
     */
    basket: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `order_status.id`.<fk table='order_status' column='id'/>
     * @default c4f61b55-87f3-4841-8420-92794dba9274
     */
    order_status?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `voucher.id`.<fk table='voucher' column='id'/>
     */
    voucher?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `campaigns.id`.<fk table='campaigns' column='id'/>
     */
    campaign?: string;
    /** Format: double precision */
    value?: number;
    /** Format: timestamp with time zone */
    start: string;
    /** Format: timestamp with time zone */
    end: string;
  };
  gallery: {
    /** Format: character varying */
    url?: string;
    /** Format: character varying */
    name?: string;
  };
  image_has_likes: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `imagecarousel.id`.<fk table='imagecarousel' column='id'/>
     */
    image_id: string;
    /**
     * Format: boolean
     * @default false
     */
    liked: boolean;
  };
  images: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    url: string;
    /** Format: character varying */
    name?: string;
    /**
     * Format: boolean
     * @default true
     */
    show_main?: boolean;
    /**
     * Format: boolean
     * @default false
     */
    gallery?: boolean;
    /**
     * Format: boolean
     * @default false
     */
    carousel?: boolean;
  };
  special_days: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /** Format: date */
    date?: string;
    /** Format: time with time zone */
    start_hours: string;
    /** Format: time with time zone */
    end_hours: string;
    /**
     * Format: boolean
     * @default true
     */
    open: boolean;
  };
  service_has_images: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `imagecarousel.id`.<fk table='imagecarousel' column='id'/>
     */
    image_id: string;
    /** Format: bigint */
    index?: number;
    /**
     * Format: boolean
     * @default true
     */
    show?: boolean;
  };
  basket: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `basket_status.id`.<fk table='basket_status' column='id'/>
     * @default 978afeb7-4954-46c3-bb09-3fc9ca7b7317
     */
    basket_status?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    client_id?: string;
  };
  user_status: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: character varying
     * @default
     */
    user_status: string;
  };
  articles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    image?: string;
    /** Format: text */
    content?: string;
    /** Format: date */
    release_date?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    author?: string;
  };
  campaigns: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: timestamp with time zone */
    start_date: string;
    /** Format: timestamp with time zone */
    end_date: string;
    /** Format: double precision */
    value: number;
    /** Format: character varying */
    name?: string;
    /** Format: text */
    description?: string;
  };
  page_has_articles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `pages.id`.<fk table='pages' column='id'/>
     */
    page_id: string;
    /** Format: bigint */
    index?: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `articles.id`.<fk table='articles' column='id'/>
     */
    article_id: string;
  };
  service_has_compatible_services: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    compatible_services?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
  };
  /** @description user roles */
  roles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: character varying
     * @default client
     */
    role: string;
  };
  basket_has_services: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `basket.id`.<fk table='basket' column='id'/>
     */
    basket_id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `services.id`.<fk table='services' column='id'/>
     */
    service_id: string;
  };
  clients: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name: string;
    /** Format: character varying */
    phone: string;
    /** Format: character varying */
    email: string;
    /** Format: timestamp with time zone */
    last_visit?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `roles.id`.<fk table='roles' column='id'/>
     * @default 48b3e094-10df-4658-824d-fde7a9a48553
     */
    role: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `user_status.id`.<fk table='user_status' column='id'/>
     * @default 828ce63a-31ae-40fb-be14-dd10ae7ff15f
     */
    user_status: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `clients.id`.<fk table='clients' column='id'/>
     */
    referred_by?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description testimonials */
  "body.testimonials": definitions["testimonials"];
  /** Format: uuid */
  "rowFilter.testimonials.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.testimonials.created_at": string;
  /** Format: text */
  "rowFilter.testimonials.content": string;
  /** Format: boolean */
  "rowFilter.testimonials.show": string;
  /** Format: uuid */
  "rowFilter.testimonials.client": string;
  /** @description basket_status */
  "body.basket_status": definitions["basket_status"];
  /** Format: uuid */
  "rowFilter.basket_status.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.basket_status.created_at": string;
  /** Format: character varying */
  "rowFilter.basket_status.basket_status": string;
  /** @description campaign_has_services */
  "body.campaign_has_services": definitions["campaign_has_services"];
  /** Format: uuid */
  "rowFilter.campaign_has_services.campaign_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.campaign_has_services.created_at": string;
  /** Format: uuid */
  "rowFilter.campaign_has_services.service_id": string;
  /** @description order_status */
  "body.order_status": definitions["order_status"];
  /** Format: uuid */
  "rowFilter.order_status.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.order_status.created_at": string;
  /** Format: character varying */
  "rowFilter.order_status.order_status": string;
  /** @description pages */
  "body.pages": definitions["pages"];
  /** Format: uuid */
  "rowFilter.pages.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.pages.created_at": string;
  /** Format: character varying */
  "rowFilter.pages.name": string;
  /** Format: character varying */
  "rowFilter.pages.title": string;
  /** Format: character varying */
  "rowFilter.pages.background": string;
  /** Format: text */
  "rowFilter.pages.sub_header": string;
  /** Format: text */
  "rowFilter.pages.support_text": string;
  /** @description imagegallery */
  "body.imagegallery": definitions["imagegallery"];
  /** Format: uuid */
  "rowFilter.imagegallery.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.imagegallery.created_at": string;
  /** Format: character varying */
  "rowFilter.imagegallery.url": string;
  /** Format: character varying */
  "rowFilter.imagegallery.name": string;
  /** Format: boolean */
  "rowFilter.imagegallery.show_main": string;
  /** Format: boolean */
  "rowFilter.imagegallery.gallery": string;
  /** Format: boolean */
  "rowFilter.imagegallery.carousel": string;
  /** @description working_hours */
  "body.working_hours": definitions["working_hours"];
  /** Format: uuid */
  "rowFilter.working_hours.id": string;
  /** Format: character varying */
  "rowFilter.working_hours.day": string;
  /** Format: time with time zone */
  "rowFilter.working_hours.start_hour": string;
  /** Format: time with time zone */
  "rowFilter.working_hours.end_hours": string;
  /** Format: boolean */
  "rowFilter.working_hours.open": string;
  /** @description comments */
  "body.comments": definitions["comments"];
  /** Format: uuid */
  "rowFilter.comments.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.comments.created_at": string;
  /** Format: text */
  "rowFilter.comments.content": string;
  /** Format: uuid */
  "rowFilter.comments.comment_id": string;
  /** Format: uuid */
  "rowFilter.comments.client_id": string;
  /** Format: uuid */
  "rowFilter.comments.service_id": string;
  /** @description message */
  "body.message": definitions["message"];
  /** Format: uuid */
  "rowFilter.message.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.message.created_at": string;
  /** Format: character varying */
  "rowFilter.message.email": string;
  /** Format: character varying */
  "rowFilter.message.phone": string;
  /** Format: text */
  "rowFilter.message.content": string;
  /** Format: character varying */
  "rowFilter.message.name": string;
  /** Format: boolean */
  "rowFilter.message.replied": string;
  /** @description voucher */
  "body.voucher": definitions["voucher"];
  /** Format: uuid */
  "rowFilter.voucher.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.voucher.created_at": string;
  /** Format: text */
  "rowFilter.voucher.voucher_name": string;
  /** Format: double precision */
  "rowFilter.voucher.value": string;
  /** Format: timestamp with time zone */
  "rowFilter.voucher.start_date": string;
  /** Format: timestamp with time zone */
  "rowFilter.voucher.end_date": string;
  /** Format: uuid */
  "rowFilter.voucher.client_id": string;
  /** @description business_info */
  "body.business_info": definitions["business_info"];
  /** Format: uuid */
  "rowFilter.business_info.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.business_info.created_at": string;
  /** Format: character varying */
  "rowFilter.business_info.name": string;
  /** Format: character varying */
  "rowFilter.business_info.email": string;
  /** Format: character varying */
  "rowFilter.business_info.phone": string;
  /** Format: boolean */
  "rowFilter.business_info.show": string;
  /** @description imagecarousel */
  "body.imagecarousel": definitions["imagecarousel"];
  /** Format: uuid */
  "rowFilter.imagecarousel.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.imagecarousel.created_at": string;
  /** Format: character varying */
  "rowFilter.imagecarousel.url": string;
  /** Format: character varying */
  "rowFilter.imagecarousel.name": string;
  /** Format: boolean */
  "rowFilter.imagecarousel.show_main": string;
  /** Format: boolean */
  "rowFilter.imagecarousel.gallery": string;
  /** Format: boolean */
  "rowFilter.imagecarousel.carousel": string;
  /** @description services */
  "body.services": definitions["services"];
  /** Format: uuid */
  "rowFilter.services.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.services.created_at": string;
  /** Format: character varying */
  "rowFilter.services.name": string;
  /** Format: text */
  "rowFilter.services.description": string;
  /** Format: bigint */
  "rowFilter.services.duration": string;
  /** Format: double precision */
  "rowFilter.services.price": string;
  /** Format: text */
  "rowFilter.services.image": string;
  /** Format: uuid */
  "rowFilter.services.category": string;
  /** @description ratings */
  "body.ratings": definitions["ratings"];
  /** Format: uuid */
  "rowFilter.ratings.service_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.ratings.created_at": string;
  /** Format: integer */
  "rowFilter.ratings.value": string;
  /** Format: uuid */
  "rowFilter.ratings.client_id": string;
  /** @description category */
  "body.category": definitions["category"];
  /** Format: uuid */
  "rowFilter.category.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.category.created_at": string;
  /** Format: character varying */
  "rowFilter.category.category_name": string;
  /** @description orders */
  "body.orders": definitions["orders"];
  /** Format: uuid */
  "rowFilter.orders.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.orders.created_at": string;
  /** Format: uuid */
  "rowFilter.orders.client_id": string;
  /** Format: uuid */
  "rowFilter.orders.basket": string;
  /** Format: uuid */
  "rowFilter.orders.order_status": string;
  /** Format: uuid */
  "rowFilter.orders.voucher": string;
  /** Format: uuid */
  "rowFilter.orders.campaign": string;
  /** Format: double precision */
  "rowFilter.orders.value": string;
  /** Format: timestamp with time zone */
  "rowFilter.orders.start": string;
  /** Format: timestamp with time zone */
  "rowFilter.orders.end": string;
  /** @description gallery */
  "body.gallery": definitions["gallery"];
  /** Format: character varying */
  "rowFilter.gallery.url": string;
  /** Format: character varying */
  "rowFilter.gallery.name": string;
  /** @description image_has_likes */
  "body.image_has_likes": definitions["image_has_likes"];
  /** Format: uuid */
  "rowFilter.image_has_likes.client_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.image_has_likes.created_at": string;
  /** Format: uuid */
  "rowFilter.image_has_likes.image_id": string;
  /** Format: boolean */
  "rowFilter.image_has_likes.liked": string;
  /** @description images */
  "body.images": definitions["images"];
  /** Format: uuid */
  "rowFilter.images.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.images.created_at": string;
  /** Format: character varying */
  "rowFilter.images.url": string;
  /** Format: character varying */
  "rowFilter.images.name": string;
  /** Format: boolean */
  "rowFilter.images.show_main": string;
  /** Format: boolean */
  "rowFilter.images.gallery": string;
  /** Format: boolean */
  "rowFilter.images.carousel": string;
  /** @description special_days */
  "body.special_days": definitions["special_days"];
  /** Format: uuid */
  "rowFilter.special_days.id": string;
  /** Format: date */
  "rowFilter.special_days.date": string;
  /** Format: time with time zone */
  "rowFilter.special_days.start_hours": string;
  /** Format: time with time zone */
  "rowFilter.special_days.end_hours": string;
  /** Format: boolean */
  "rowFilter.special_days.open": string;
  /** @description service_has_images */
  "body.service_has_images": definitions["service_has_images"];
  /** Format: uuid */
  "rowFilter.service_has_images.service_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.service_has_images.created_at": string;
  /** Format: uuid */
  "rowFilter.service_has_images.image_id": string;
  /** Format: bigint */
  "rowFilter.service_has_images.index": string;
  /** Format: boolean */
  "rowFilter.service_has_images.show": string;
  /** @description basket */
  "body.basket": definitions["basket"];
  /** Format: uuid */
  "rowFilter.basket.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.basket.created_at": string;
  /** Format: uuid */
  "rowFilter.basket.basket_status": string;
  /** Format: uuid */
  "rowFilter.basket.client_id": string;
  /** @description user_status */
  "body.user_status": definitions["user_status"];
  /** Format: uuid */
  "rowFilter.user_status.id": string;
  /** Format: character varying */
  "rowFilter.user_status.user_status": string;
  /** @description articles */
  "body.articles": definitions["articles"];
  /** Format: uuid */
  "rowFilter.articles.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.articles.created_at": string;
  /** Format: character varying */
  "rowFilter.articles.name": string;
  /** Format: character varying */
  "rowFilter.articles.image": string;
  /** Format: text */
  "rowFilter.articles.content": string;
  /** Format: date */
  "rowFilter.articles.release_date": string;
  /** Format: uuid */
  "rowFilter.articles.author": string;
  /** @description campaigns */
  "body.campaigns": definitions["campaigns"];
  /** Format: uuid */
  "rowFilter.campaigns.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.campaigns.created_at": string;
  /** Format: timestamp with time zone */
  "rowFilter.campaigns.start_date": string;
  /** Format: timestamp with time zone */
  "rowFilter.campaigns.end_date": string;
  /** Format: double precision */
  "rowFilter.campaigns.value": string;
  /** Format: character varying */
  "rowFilter.campaigns.name": string;
  /** Format: text */
  "rowFilter.campaigns.description": string;
  /** @description page_has_articles */
  "body.page_has_articles": definitions["page_has_articles"];
  /** Format: uuid */
  "rowFilter.page_has_articles.page_id": string;
  /** Format: bigint */
  "rowFilter.page_has_articles.index": string;
  /** Format: uuid */
  "rowFilter.page_has_articles.article_id": string;
  /** @description service_has_compatible_services */
  "body.service_has_compatible_services": definitions["service_has_compatible_services"];
  /** Format: uuid */
  "rowFilter.service_has_compatible_services.service_id": string;
  /** Format: uuid */
  "rowFilter.service_has_compatible_services.compatible_services": string;
  /** Format: timestamp with time zone */
  "rowFilter.service_has_compatible_services.created_at": string;
  /** @description roles */
  "body.roles": definitions["roles"];
  /** Format: uuid */
  "rowFilter.roles.id": string;
  /** Format: character varying */
  "rowFilter.roles.role": string;
  /** @description basket_has_services */
  "body.basket_has_services": definitions["basket_has_services"];
  /** Format: uuid */
  "rowFilter.basket_has_services.basket_id": string;
  /** Format: timestamp with time zone */
  "rowFilter.basket_has_services.created_at": string;
  /** Format: uuid */
  "rowFilter.basket_has_services.service_id": string;
  /** @description clients */
  "body.clients": definitions["clients"];
  /** Format: uuid */
  "rowFilter.clients.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.clients.created_at": string;
  /** Format: character varying */
  "rowFilter.clients.name": string;
  /** Format: character varying */
  "rowFilter.clients.phone": string;
  /** Format: character varying */
  "rowFilter.clients.email": string;
  /** Format: timestamp with time zone */
  "rowFilter.clients.last_visit": string;
  /** Format: uuid */
  "rowFilter.clients.role": string;
  /** Format: uuid */
  "rowFilter.clients.user_status": string;
  /** Format: uuid */
  "rowFilter.clients.referred_by": string;
}

export interface operations {}

export interface external {}
